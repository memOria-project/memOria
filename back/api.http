# @baseUrl=http://localhost:3500/v1
@baseUrl=https://memoriapo.herokuapp.com/v1

@auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjQ0LCJleHAiOjE2NDc3NzE5NTcsImlhdCI6MTY0NzY4NTU1N30.Z-brF0rQU1y8gd5C7UPdrc6TMP6XWiPPOIo-ZP0t7sM

### Get all decks
GET {{baseUrl}}/decks


### Get all cards from deck
GET {{baseUrl}}/deck/126


### delete deck
DELETE {{baseUrl}}/deck/16
content-type: "application/json"
Authorization: {{auth}}

#-----------  USERS CRUD -------------------------------

### login Toti
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email" : "toti@s.fr",
  "password" : "toti"
}

### login Tutu
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email" : "tutu@gmal.fr",
  "password" : "azerty"
}

### login Tuti
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email" : "tuti@gmal.fr",
  "password" : "azerty"
}

### login Nicoclock
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email" : "nico@clo.ck",
  "password" : "Nicocratie"
}

### login Tati
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email" : "tati@s.fr",
  "password" : "tata"
}

### login Nicoclock
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email" : "nico@clo.ck",
  "password" : "Nicocratie"
}


### login Miss Lélé
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email" : "lea.mm@pm.me",
  "password" : "misslélé90@"
}

### Subscribe
POST {{baseUrl}}/signup
Content-Type: application/json

{
  "name": "Coulibaly",
  "email" : "s.coulibaly@gmail.com",
  "password" : "souley92"
}


### Subscribe
POST {{baseUrl}}/signup
Content-Type: application/json

{
  "name": "SOULEY",
  "email" : "s.coulibaly@gmail.com",
  "password" : "souley92"
}



### Update user info
POST {{baseUrl}}/user/update
Content-Type: application/json
Authorization: {{auth}}

{
  "currentPassword" : "",
  "newPassword": ""

}

### Get user infos
GET {{baseUrl}}/user/infos
# coller Authorization + token généré et founi par le serveur
Authorization: {{auth}}


#-----------  CARDS CRUD -------------------------------

### Get user cards
GET {{baseUrl}}/user/cards
# coller Authorization + token généré et founi par le serveur
Authorization: {{auth}}

### Add a card
POST {{baseUrl}}/card
Authorization: {{auth}}
Content-Type: application/json

{
    "deckId" : 126,
    "recto": "test recto>",
    "verso": "test verso"
}

### Delete a card
DELETE {{baseUrl}}/card
Authorization: {{auth}}
Content-Type: application/json

{
    "id" : 1003
}


### Delay a card
POST {{baseUrl}}/card/delay
Authorization: {{auth}}
Content-Type: application/json

{
    "id" : 80
}

// GESTION DES DECKS


### Add a DECK
POST {{baseUrl}}/deck
Content-Type: application/json
Authorization: {{auth}}

{
    "title" : "TP27 bis",
    "tag": ["last chance", "test"]
}


# ### Tests benchmark Redis ...
# GET {{host}}/redis

# ### ... vs Postgres
# GET {{host}}/pg



